version: '3.4'

services:
  file_system:
    container_name: file_system
    image: mongo:latest
    restart: always
    command: mongod --port $MONGO_PORT
    ports:
        - '${MONGO_PORT}:${MONGO_PORT}'
  
  storage:
    container_name: storage
    image: postgres:14.3
    restart: always
    ports:
      - "${POSTGRES_OUTER_PORT}:${POSTGRES_INNER_PORT}"
    environment:
      POSTGRES_DB: $POSTGRES_DATABASE_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      TZ: Europe/Moscow
    volumes:
      - ~/volumes/postgres:/var/lib/postgresql/data
      - ./drivingschool.sql:/docker-entrypoint-initdb.d/drivingschool.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE_NAME} -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    container_name: app
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - "storage"
      - "file_system"
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
    environment:
      ASPNETCORE_ENVIRONMENT: $ASPNETCORE_ENVIRONMENT
      ASPNETCORE_URLS: https://+;http://+;
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: $ASPNETCORE_Password
      TZ: Europe/Moscow
    stdin_open: true
    tty: true
    volumes:
      - type: bind
        source: $USERPROFILE\.aspnet\https
        target: /https/
